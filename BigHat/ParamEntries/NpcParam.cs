namespace BigHat.ParamEntries
{
    [Param(580)]
    public class NpcParam : ParamEntry
    {
        public int BehaviorVariationId;
        public int AiThinkId;
        public int NameId;
        public float TurnVelocity;
        public float HitHeight;
        public float HitRadius;
        public uint Weight;
        public float HitYOffset;
        public uint Hp;
        public uint Mp;
        public uint GetSoul;
        public int ItemLotId_1;
        public int ItemLotId_2;
        public int ItemLotId_3;
        public int ItemLotId_4;
        public int ItemLotId_5;
        public int ItemLotId_6;
        public int HumanityLotId;
        [PArrayLength(8)]
        public int[] SpEffectID;
        public int GameClearSpEffectID;
        public float PhysGuardCutRate;
        public float MagGuardCutRate;
        public float FireGuardCutRate;
        public float ThunGuardCutRate;
        public int AnimIdOffset;
        public int MoveAnimId;
        public int SpMoveAnimId1;
        public int SpMoveAnimId2;
        public float NetworkWarpDist;
        public int DbgBehaviorR1;
        public int DbgBehaviorL1;
        public int DbgBehaviorR2;
        public int DbgBehaviorL2;
        public int DbgBehaviorRL;
        public int DbgBehaviorRR;
        public int DbgBehaviorRD;
        public int DbgBehaviorRU;
        public int DbgBehaviorLL;
        public int DbgBehaviorLR;
        public int DbgBehaviorLD;
        public int DbgBehaviorLU;
        public int AnimIdOffset2;
        public float PartsDamageRate1;
        public float PartsDamageRate2;
        public float PartsDamageRate3;
        public float PartsDamageRate4;
        public float PartsDamageRate5;
        public float PartsDamageRate6;
        public float PartsDamageRate7;
        public float PartsDamageRate8;
        public float WeakPartsDamageRate;
        public float SuperArmorRecoverCorrection;
        public float SuperArmorBrakeKnockbackDist;
        public ushort Stamina;
        public ushort StaminaRecoverBaseVel;
        public short Def_phys;
        public short Def_slash;
        public short Def_blow;
        public short Def_thrust;
        public short Def_mag;
        public short Def_fire;
        public short Def_thun;
        public ushort DefFlickPower;
        public ushort ResistPoison;
        public ushort ResistDisease;
        public ushort ResistBleed;
        public ushort ResistCurse;
        public short GhostModelId;
        public short NormalChangeResourceId;
        public short GuardAngle;
        public short SlashGuardCutRate;
        public short BlowGuardCutRate;
        public short ThrustGuardCutRate;
        public short SuperArmorDurability;
        public short NormalChangeTexChrId;
        public ushort DropType;
        public byte KnockbackRate;
        public byte KnockbackParamId;
        public byte FallDamageDump;
        public byte StaminaGuardDef;
        public byte PcAttrB;
        public byte PcAttrW;
        public byte PcAttrL;
        public byte PcAttrR;
        public byte AreaAttrB;
        public byte AreaAttrW;
        public byte AreaAttrL;
        public byte AreaAttrR;
        public byte MpRecoverBaseVel;
        public byte FlickDamageCutRate;
        public sbyte DefaultLodParamId;
        public byte DrawType;
        public byte NpcType;
        public byte TeamType;
        public byte MoveType;
        public byte LockDist;
        public byte Material;
        public byte MaterialSfx;
        public byte Material_weak;
        public byte MaterialSfx_weak;
        public byte PartsDamageType;
        public byte MaxUndurationAng;
        public sbyte GuardLevel;
        public byte BurnSfxType;
        public sbyte PoisonGuardResist;
        public sbyte DiseaseGuardResist;
        public sbyte BloodGuardResist;
        public sbyte CurseGuardResist;
        public byte ParryAttack;
        public byte ParryDefense;
        public byte SfxSize;
        public byte PushOutCamRegionRadius;
        public byte HitStopType;
        public byte LadderEndChkOffsetTop;
        public byte LadderEndChkOffsetLow;
        [PArrayLength(5)]
        public byte[] BitFields;
        [Hidden]
        [PArrayLength(16)]
        public byte[] Unknown1;
        public short Def_dark;
        [Hidden]
        [PArrayLength(64)]
        public byte[] Unknown2;
        public float Phys;
        public float Thrust;
        public float Strike;
        public float Slash;
        public float Magic;
        public float Fire;
        public float Lightning;
        public float Dark;
    }
}
